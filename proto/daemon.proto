syntax = "proto3";

package daemon;

// Daemon is the api for the local agent on each players machine
service Daemon {
  rpc Events(stream Event) returns (stream Event) {}
  // rpc CreateGuild(CreateGuildRequest) returns (CreateGuildResponse) {}

  rpc CreateServer(CreateServerRequest) returns (CreateServerResponse) {}
  rpc StartServer(StartServerRequest) returns (StartServerResponse) {}
  rpc StopServer(StopServerRequest) returns (StopServerResponse) {}
  rpc ListServers(ListServersRequest) returns (ListServersResponse) {}
  rpc ListGuilds(ListGuildsRequest) returns (ListGuildsResponse) {}

  rpc ListMembers(ListMembersRequest) returns (ListMembersResponse) {}
}

message Event {
  string type = 1;
}

message ListServersRequest {
  uint32 page = 1;
  uint32 limit = 2;
}

message ListServersResponse {
  repeated Server servers = 1;
}

message CreateServerRequest {
  string image = 1;
  string name = 2;
}

message CreateServerResponse {
  Server server = 1;
}

message StartServerRequest {
  string id = 1;
}

message StartServerResponse {
  Server server = 1;
}

message StopServerRequest {
  string id = 1;
}

message StopServerResponse {
}

message Server {
  enum Status {
    STOPPED = 0;
    STARTING = 1;
    RUNNING = 2;
    STOPPING = 3;
  }

  string id = 1;
  string name = 2;
  string image = 3;
  Fileset fileset = 4;
  Status status = 5;
}

message Fileset {
  bytes hash = 1;
}

message Guild {
  string id = 1;
  string name = 2;
  bool connected = 3;
  string ip = 4;
}

message ListGuildsRequest {
  uint32 page = 1;
  uint32 limit = 2;
}

message ListGuildsResponse {
  repeated Guild guilds = 1;
}

message Member {
  string id = 1;
  string name = 2;
  string ip = 3;
}

message ListMembersRequest {
  uint32 page = 1;
  uint32 limit = 2;
}

message ListMembersResponse {
  repeated Member members = 1;
}
