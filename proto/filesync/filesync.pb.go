// Code generated by protoc-gen-go. DO NOT EDIT.
// source: filesync.proto

/*
Package filesync is a generated protocol buffer package.

It is generated from these files:
	filesync.proto

It has these top-level messages:
	GetFileRequest
	GetFileResponse
*/
package filesync

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type GetFileRequest struct {
	FsId string `protobuf:"bytes,1,opt,name=fs_id,json=fsId" json:"fs_id,omitempty"`
	Path string `protobuf:"bytes,2,opt,name=path" json:"path,omitempty"`
}

func (m *GetFileRequest) Reset()                    { *m = GetFileRequest{} }
func (m *GetFileRequest) String() string            { return proto.CompactTextString(m) }
func (*GetFileRequest) ProtoMessage()               {}
func (*GetFileRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *GetFileRequest) GetFsId() string {
	if m != nil {
		return m.FsId
	}
	return ""
}

func (m *GetFileRequest) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

type GetFileResponse struct {
	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (m *GetFileResponse) Reset()                    { *m = GetFileResponse{} }
func (m *GetFileResponse) String() string            { return proto.CompactTextString(m) }
func (*GetFileResponse) ProtoMessage()               {}
func (*GetFileResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *GetFileResponse) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*GetFileRequest)(nil), "filesync.GetFileRequest")
	proto.RegisterType((*GetFileResponse)(nil), "filesync.GetFileResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Filesync service

type FilesyncClient interface {
	GetFile(ctx context.Context, in *GetFileRequest, opts ...grpc.CallOption) (*GetFileResponse, error)
}

type filesyncClient struct {
	cc *grpc.ClientConn
}

func NewFilesyncClient(cc *grpc.ClientConn) FilesyncClient {
	return &filesyncClient{cc}
}

func (c *filesyncClient) GetFile(ctx context.Context, in *GetFileRequest, opts ...grpc.CallOption) (*GetFileResponse, error) {
	out := new(GetFileResponse)
	err := grpc.Invoke(ctx, "/filesync.Filesync/GetFile", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Filesync service

type FilesyncServer interface {
	GetFile(context.Context, *GetFileRequest) (*GetFileResponse, error)
}

func RegisterFilesyncServer(s *grpc.Server, srv FilesyncServer) {
	s.RegisterService(&_Filesync_serviceDesc, srv)
}

func _Filesync_GetFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetFileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FilesyncServer).GetFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/filesync.Filesync/GetFile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FilesyncServer).GetFile(ctx, req.(*GetFileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Filesync_serviceDesc = grpc.ServiceDesc{
	ServiceName: "filesync.Filesync",
	HandlerType: (*FilesyncServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetFile",
			Handler:    _Filesync_GetFile_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "filesync.proto",
}

func init() { proto.RegisterFile("filesync.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 154 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4b, 0xcb, 0xcc, 0x49,
	0x2d, 0xae, 0xcc, 0x4b, 0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x80, 0xf1, 0x95, 0x2c,
	0xb9, 0xf8, 0xdc, 0x53, 0x4b, 0xdc, 0x32, 0x73, 0x52, 0x83, 0x52, 0x0b, 0x4b, 0x53, 0x8b, 0x4b,
	0x84, 0x84, 0xb9, 0x58, 0xd3, 0x8a, 0xe3, 0x33, 0x53, 0x24, 0x18, 0x15, 0x18, 0x35, 0x38, 0x83,
	0x58, 0xd2, 0x8a, 0x3d, 0x53, 0x84, 0x84, 0xb8, 0x58, 0x0a, 0x12, 0x4b, 0x32, 0x24, 0x98, 0x20,
	0x62, 0x20, 0xb6, 0x92, 0x2a, 0x17, 0x3f, 0x5c, 0x6b, 0x71, 0x41, 0x7e, 0x5e, 0x71, 0x2a, 0x48,
	0x59, 0x4a, 0x62, 0x49, 0x22, 0x58, 0x2b, 0x4f, 0x10, 0x98, 0x6d, 0xe4, 0xc3, 0xc5, 0xe1, 0x06,
	0xb5, 0x4d, 0xc8, 0x81, 0x8b, 0x1d, 0xaa, 0x45, 0x48, 0x42, 0x0f, 0xee, 0x26, 0x54, 0x07, 0x48,
	0x49, 0x62, 0x91, 0x81, 0x98, 0xaf, 0xc4, 0x90, 0xc4, 0x06, 0xf6, 0x80, 0x31, 0x20, 0x00, 0x00,
	0xff, 0xff, 0xd2, 0xc7, 0xcb, 0x7b, 0xd2, 0x00, 0x00, 0x00,
}
